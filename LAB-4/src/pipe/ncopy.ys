#/* $begin ncopy-ys */
##################################################################
# ncopy.ys - Copy a src block of len ints to dst.
# Return the number of positive ints (>0) contained in src.
#
# Include your name and ID here.
#
# Describe how and why you modified the baseline code.
#
##################################################################
# Do not modify this portion
# Function prologue.
ncopy:	pushl %ebp		# Save old frame pointer
	rrmovl %esp,%ebp	# Set up new frame pointer
	pushl %esi		# Save callee-save regs
	pushl %ebx
	pushl %edi
	mrmovl 8(%ebp),%ebx	# src
	mrmovl 16(%ebp),%edx	# len
	mrmovl 12(%ebp),%ecx	# dst

##################################################################
# You can modify this portion


	xorl %eax,%eax
Loop:
    iaddl $-4, %edx
    jl EndLoop
	mrmovl (%ebx), %esi
	rmmovl %esi, (%ecx)
	andl %esi, %esi
	jle L0
	iaddl $1, %eax
L0:
	mrmovl 4(%ebx), %esi
	rmmovl %esi, 4(%ecx)
    andl %esi, %esi
    jle L1
    iaddl $1, %eax
L1:
    mrmovl 8(%ebx), %esi
	rmmovl %esi, 8(%ecx)
    andl %esi, %esi
    jle L2
    iaddl $1, %eax
L2:
    mrmovl 12(%ebx), %esi
	rmmovl %esi, 12(%ecx)
    andl %esi, %esi
    jle L3
    iaddl $1, %eax
L3:
	iaddl $16, %ebx
	iaddl $16, %ecx
    jmp Loop
EndLoop:
    iaddl $3, %edx
Loop2:
    jl EndLoop2
    mrmovl (%ebx), %esi
    rmmovl %esi, (%ecx)
    andl %esi, %esi
    jle LL
    iaddl $1, %eax
LL:
	iaddl $4, %ebx
	iaddl $4, %ecx
	iaddl $-1, %edx
    jmp Loop2
EndLoop2:


##################################################################
# Do not modify the following section of code
# Function epilogue.
Done:
	popl %edi               # Restore callee-save registers
	popl %ebx
	popl %esi
	rrmovl %ebp, %esp
	popl %ebp
	ret
##################################################################
# Keep the following label at the end of your function
End:
#/* $end ncopy-ys */
